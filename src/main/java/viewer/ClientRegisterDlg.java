package viewer;

import Utils.Utils;
import controller.GerenciadorInterGrafica;
import domain.Endereco;
import domain.Usuario;
import java.awt.Color;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JOptionPane;
import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

/**
 *
 * @author Usuario
 */
public class ClientRegisterDlg extends javax.swing.JDialog {

    /**
     * Creates new form ClientRegisterDlg
     */
    private static DateTimeFormatter FORMATTER = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    
    private String msgError = "";
    
    private File file;
    
    public ClientRegisterDlg(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sex_group = new javax.swing.ButtonGroup();
        picturePanel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        cpfTxt = new javax.swing.JFormattedTextField();
        zipLabel = new javax.swing.JLabel();
        cepTxt = new javax.swing.JFormattedTextField();
        addressLabel = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        enderecoTxt = new javax.swing.JTextField();
        nomeTxt = new javax.swing.JTextField();
        ssnLabel = new javax.swing.JLabel();
        bDateLabel = new javax.swing.JLabel();
        cityLabel = new javax.swing.JLabel();
        cidadeTxt = new javax.swing.JTextField();
        dateChooser = new com.toedter.calendar.JDateChooser();
        sexPanel = new javax.swing.JPanel();
        fRadio = new javax.swing.JRadioButton();
        mRadio = new javax.swing.JRadioButton();
        positionPanel = new javax.swing.JPanel();
        POCheckBox = new javax.swing.JCheckBox();
        DesenvolvedorCheckBox = new javax.swing.JCheckBox();
        ScrumMasterCheckBox = new javax.swing.JCheckBox();
        usoComboBox = new javax.swing.JComboBox<>();
        porpuseLabel = new javax.swing.JLabel();
        OKButton = new javax.swing.JButton();
        CancelarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Client Register");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        picturePanel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        picturePanel.setText("Foto");
        picturePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        picturePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                picturePanelMouseClicked(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        try {
            cpfTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cpfTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cpfTxtFocusLost(evt);
            }
        });
        cpfTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfTxtActionPerformed(evt);
            }
        });

        zipLabel.setText("CEP");

        try {
            cepTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cepTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cepTxtFocusLost(evt);
            }
        });
        cepTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cepTxtActionPerformed(evt);
            }
        });

        addressLabel.setText("Endere√ßo");

        NameLabel.setText("Nome");

        enderecoTxt.setEditable(false);
        enderecoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enderecoTxtActionPerformed(evt);
            }
        });

        nomeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeTxtActionPerformed(evt);
            }
        });

        ssnLabel.setText("CPF");

        bDateLabel.setText("Data Nasc");

        cityLabel.setText("Cidade");

        cidadeTxt.setEditable(false);
        cidadeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cidadeTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bDateLabel)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(zipLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addressLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cidadeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cepTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(enderecoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ssnLabel))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cpfTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nomeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                                .addContainerGap())))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameLabel)
                    .addComponent(nomeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpfTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ssnLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bDateLabel)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cepTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zipLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enderecoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityLabel)
                    .addComponent(cidadeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        sexPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Sexo"));
        sexPanel.setLayout(new java.awt.BorderLayout());

        sex_group.add(fRadio);
        fRadio.setText("F");
        sexPanel.add(fRadio, java.awt.BorderLayout.CENTER);

        sex_group.add(mRadio);
        mRadio.setText("M");
        mRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mRadioActionPerformed(evt);
            }
        });
        sexPanel.add(mRadio, java.awt.BorderLayout.PAGE_START);

        positionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Position")), "Posi√ß√£o"));
        positionPanel.setToolTipText("");
        positionPanel.setDoubleBuffered(false);
        positionPanel.setLayout(new java.awt.BorderLayout());

        POCheckBox.setText("Product Owner");
        POCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                POCheckBoxStateChanged(evt);
            }
        });
        positionPanel.add(POCheckBox, java.awt.BorderLayout.CENTER);

        DesenvolvedorCheckBox.setText("Desenvolvedor");
        positionPanel.add(DesenvolvedorCheckBox, java.awt.BorderLayout.PAGE_START);

        ScrumMasterCheckBox.setText("Scrum Master");
        ScrumMasterCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScrumMasterCheckBoxActionPerformed(evt);
            }
        });
        positionPanel.add(ScrumMasterCheckBox, java.awt.BorderLayout.PAGE_END);

        usoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Trabalho", "Estudo" }));

        porpuseLabel.setText("Uso");

        OKButton.setText("Ok");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        CancelarButton.setText("Cancelar");
        CancelarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(positionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sexPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                .addComponent(picturePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(CancelarButton)
                        .addGap(100, 100, 100)
                        .addComponent(OKButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(14, 14, 14))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(porpuseLabel)
                .addGap(31, 31, 31)
                .addComponent(usoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sexPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(picturePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(positionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(porpuseLabel)
                    .addComponent(usoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelarButton)
                    .addComponent(OKButton))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeTxtActionPerformed

    private void enderecoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enderecoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enderecoTxtActionPerformed

    private void cepTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cepTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cepTxtActionPerformed

    private void cpfTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpfTxtActionPerformed

    private void mRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mRadioActionPerformed

    private void ScrumMasterCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScrumMasterCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ScrumMasterCheckBoxActionPerformed

    private void POCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_POCheckBoxStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_POCheckBoxStateChanged

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed

        if (validateFields()){


        Date data;
        data = dateChooser.getDate();
        

        Endereco endereco = Endereco.builder().cep(cepTxt.getText()).cidade(cidadeTxt.getText()).logradouro(enderecoTxt.getText()).build();
        

        System.out.println("Data formatada" + data);
        Usuario newUser = Usuario.builder().
                endereco(endereco)
                .cpf(cpfTxt.getText())
                .dataNasc(data)
                .nome(nomeTxt.getText())
                .tarefasDesignadas(new ArrayList<>())
                .boards(new ArrayList<>())
                .build();
        GerenciadorInterGrafica.getMyInstance().getGerenciadorDominio().criar(newUser.getEndereco());
        GerenciadorInterGrafica.getMyInstance().getGerenciadorDominio().criar(newUser);
        
        limparCampos();
        dispose();
        }else{
            JOptionPane.showMessageDialog(this, this.msgError, "Client Registered", JOptionPane.ERROR_MESSAGE);
            this.msgError = "";
            System.out.println("An error occurred in the user creation.");
        }
    }//GEN-LAST:event_OKButtonActionPerformed
    private Boolean validateFields(){
        setDefaultColorToPanels();
        
        if (dateChooser.getDate() == null) {
            this.msgError = this.msgError + "Birth date not informed. Try again.\n";
            bDateLabel.setForeground(Color.red);

        }
        if (!Utils.isCPF(cpfTxt.getText()) || cpfTxt.getText().isEmpty()) {
            this.msgError = this.msgError + "Invalid ssn number. Try again.\n";
            ssnLabel.setForeground(Color.red);
        }
        if (nomeTxt.getText().isEmpty()) {
            this.msgError = this.msgError + "Invalid name. Try again.\n";
            NameLabel.setForeground(Color.red);
        }
        
        if (cidadeTxt.getText().isEmpty()) {
            this.msgError = this.msgError + "Invalid city name. Try again.\n";
            cityLabel.setForeground(Color.red);
        }
        if (enderecoTxt.getText().isEmpty()) {
            this.msgError = this.msgError + "Invalid address. Try again.\n";
            addressLabel.setForeground(Color.red);
        }
        invalidateZipField(this.msgError);

        
        if(this.msgError.isEmpty()){
 
            return true;
        }else{
            //JOptionPane.showMessageDialog(this, this.msgError, "Client Registered", JOptionPane.INFORMATION_MESSAGE);
            
            return false;
        }
    }
    private void setDefaultColorToPanels(){
        addressLabel.setForeground(Color.black);
        bDateLabel.setForeground(Color.black);
        cityLabel.setForeground(Color.black);
        ssnLabel.setForeground(Color.black);
        NameLabel.setForeground(Color.black);
        zipLabel.setForeground(Color.black);
    }
    private String invalidateZipField(String msgParam){
        if(!zipLabel.getForeground().equals(Color.red)){
        zipLabel.setForeground(Color.red);
        cepTxt.setText("");
        return msgParam + "Invalid zip number. Try again.\n";
        }
        return msgParam;
    }
    
    private LocalDate parseLocalDate(String dateStr){
        return LocalDate.parse(dateStr, FORMATTER);
    }
    
    
    private void cidadeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cidadeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cidadeTxtActionPerformed

    private void cpfTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cpfTxtFocusLost

    }//GEN-LAST:event_cpfTxtFocusLost

    private void cepTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cepTxtFocusLost
        this.msgError = "";
        System.out.println("ZIP TXT: " + cepTxt.getText());
        
        if (!(Utils.searchAddress(cepTxt.getText()) == null)) {
            //SE O CAMPO CEP NA√ÉO FOR NULO CAI AQUI
            System.out.println("CEP: "+Utils.searchAddress(cepTxt.getText()));
            if (!(Utils.searchAddress(cepTxt.getText()).getUf() != null)) {
                //SE O CEP N√ÉO FOR NULO MAS N√ÉO FOR V√ÅLIDO CAI AQUI
                this.msgError = invalidateZipField(this.msgError);
                enderecoTxt.setText("");
                cidadeTxt.setText("");
            } else {
                //SE O CEP FOR V√ÅLIDO CAI AQUI
                enderecoTxt.setText(Utils.searchAddress(cepTxt.getText()).getLogradouro());
                cidadeTxt.setText(Utils.searchAddress(cepTxt.getText()).getCidade());
            }
        }else{
            //  SE FOR NULO CAI AQUI
            this.msgError = invalidateZipField(this.msgError);
        }
        
    }//GEN-LAST:event_cepTxtFocusLost

    private void picturePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_picturePanelMouseClicked
        JFileChooser fileChoser = new JFileChooser();
        
        // Configura√ß√£o da JANELA
        fileChoser.setMultiSelectionEnabled(false);
        fileChoser.setFileFilter(  new FileNameExtensionFilter("Imagens", "png", "gif", "jpg", "jpeg" )  );
        fileChoser.setAcceptAllFileFilterUsed(false);
        
        // Abrir no √∫ltimo diret√≥rio aberto. Na primeira vez √© NULL
        fileChoser.setCurrentDirectory(file);
               
        if ( fileChoser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION ) {
            file = fileChoser.getSelectedFile();
            
            // Imagem
            Icon foto = new ImageIcon( file.getPath() );           
            Utils.mostrarFoto(picturePanel,foto);
        }
    }//GEN-LAST:event_picturePanelMouseClicked

    private void CancelarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarButtonActionPerformed
        limparCampos();
        dispose();
        
    }//GEN-LAST:event_CancelarButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        limparCampos();
        dispose();
    }//GEN-LAST:event_formWindowClosed
    private void limparCampos(){
        setDefaultColorToPanels();
        nomeTxt.setText("");
        cpfTxt.setText("");
        dateChooser.setDate(null);
        cepTxt.setText("");
        enderecoTxt.setText("");
        cidadeTxt.setText("");
        usoComboBox.setSelectedIndex(0);
        sex_group.clearSelection();
        DesenvolvedorCheckBox.setSelected(false);
        POCheckBox.setSelected(false);
        ScrumMasterCheckBox.setSelected(false);
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelarButton;
    private javax.swing.JCheckBox DesenvolvedorCheckBox;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JButton OKButton;
    private javax.swing.JCheckBox POCheckBox;
    private javax.swing.JCheckBox ScrumMasterCheckBox;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JLabel bDateLabel;
    private javax.swing.JFormattedTextField cepTxt;
    private javax.swing.JTextField cidadeTxt;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JFormattedTextField cpfTxt;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JTextField enderecoTxt;
    private javax.swing.JRadioButton fRadio;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton mRadio;
    private javax.swing.JTextField nomeTxt;
    private javax.swing.JLabel picturePanel;
    private javax.swing.JLabel porpuseLabel;
    private javax.swing.JPanel positionPanel;
    private javax.swing.JPanel sexPanel;
    private javax.swing.ButtonGroup sex_group;
    private javax.swing.JLabel ssnLabel;
    private javax.swing.JComboBox<String> usoComboBox;
    private javax.swing.JLabel zipLabel;
    // End of variables declaration//GEN-END:variables
}
