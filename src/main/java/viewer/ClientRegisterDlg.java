package viewer;

import Utils.Utils;
import controller.GerenciadorInterGrafica;
import domain.Endereco;
import domain.Usuario;
import service.UserService;
import java.awt.Color;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.JOptionPane;
import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

/**
 *
 * @author Usuario
 */
public class ClientRegisterDlg extends javax.swing.JDialog {

    /**
     * Creates new form ClientRegisterDlg
     */
    private static DateTimeFormatter FORMATTER = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    
    private String msgError = "";
    
    private File file;
    
    public ClientRegisterDlg(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sex_group = new javax.swing.ButtonGroup();
        picturePanel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        ssnTxt = new javax.swing.JFormattedTextField();
        birthDateTxt = new javax.swing.JFormattedTextField();
        zipLabel = new javax.swing.JLabel();
        zipTxt = new javax.swing.JFormattedTextField();
        addressLabel = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        addressTxt = new javax.swing.JTextField();
        nameTxt = new javax.swing.JTextField();
        ssnLabel = new javax.swing.JLabel();
        bDateLabel = new javax.swing.JLabel();
        cityLabel = new javax.swing.JLabel();
        cityTxt = new javax.swing.JTextField();
        sexPanel = new javax.swing.JPanel();
        femaleRadio = new javax.swing.JRadioButton();
        maleRadio = new javax.swing.JRadioButton();
        positionPanel = new javax.swing.JPanel();
        POCheckBox = new javax.swing.JCheckBox();
        DeveloperCheckBox = new javax.swing.JCheckBox();
        ScrumMasterCheckBox = new javax.swing.JCheckBox();
        porpuseComboBox = new javax.swing.JComboBox<>();
        porpuseLabel = new javax.swing.JLabel();
        OKButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Client Register");

        picturePanel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        picturePanel.setText("Foto");
        picturePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        picturePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                picturePanelMouseClicked(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        try {
            ssnTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ssnTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ssnTxtFocusLost(evt);
            }
        });
        ssnTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssnTxtActionPerformed(evt);
            }
        });

        try {
            birthDateTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        birthDateTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                birthDateTxtActionPerformed(evt);
            }
        });

        zipLabel.setText("ZIP (CEP)");

        try {
            zipTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        zipTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                zipTxtFocusLost(evt);
            }
        });
        zipTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zipTxtActionPerformed(evt);
            }
        });

        addressLabel.setText("address");

        NameLabel.setText("Name");

        addressTxt.setEditable(false);
        addressTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTxtActionPerformed(evt);
            }
        });

        nameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTxtActionPerformed(evt);
            }
        });

        ssnLabel.setText("SSN (CPF)");

        bDateLabel.setText("Birth date");

        cityLabel.setText("city");

        cityTxt.setEditable(false);
        cityTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityTxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(bDateLabel)
                        .addGap(21, 21, 21))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ssnLabel)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(zipLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addressLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE))
                            .addComponent(cityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zipTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ssnTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(birthDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameLabel)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ssnTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ssnLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(birthDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bDateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zipTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zipLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityLabel)
                    .addComponent(cityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        sexPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Sexo"));
        sexPanel.setLayout(new java.awt.BorderLayout());

        sex_group.add(femaleRadio);
        femaleRadio.setText("Female");
        sexPanel.add(femaleRadio, java.awt.BorderLayout.CENTER);

        sex_group.add(maleRadio);
        maleRadio.setText("Male");
        maleRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleRadioActionPerformed(evt);
            }
        });
        sexPanel.add(maleRadio, java.awt.BorderLayout.PAGE_START);

        positionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Position")), "Position"));
        positionPanel.setLayout(new java.awt.BorderLayout());

        POCheckBox.setText("Product Owner");
        POCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                POCheckBoxStateChanged(evt);
            }
        });
        positionPanel.add(POCheckBox, java.awt.BorderLayout.CENTER);

        DeveloperCheckBox.setText("Developer");
        positionPanel.add(DeveloperCheckBox, java.awt.BorderLayout.PAGE_START);

        ScrumMasterCheckBox.setText("Scrum Master");
        ScrumMasterCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScrumMasterCheckBoxActionPerformed(evt);
            }
        });
        positionPanel.add(ScrumMasterCheckBox, java.awt.BorderLayout.PAGE_END);

        porpuseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Work", "Study" }));

        porpuseLabel.setText("Porpuse");

        OKButton.setText("Ok");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(positionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sexPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                                .addComponent(picturePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(cancelButton)
                        .addGap(63, 63, 63)
                        .addComponent(OKButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(porpuseLabel)
                        .addGap(31, 31, 31)
                        .addComponent(porpuseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sexPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(picturePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(positionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(porpuseLabel)
                    .addComponent(porpuseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(OKButton))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTxtActionPerformed

    private void addressTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressTxtActionPerformed

    private void zipTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zipTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zipTxtActionPerformed

    private void birthDateTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthDateTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_birthDateTxtActionPerformed

    private void ssnTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssnTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ssnTxtActionPerformed

    private void maleRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleRadioActionPerformed

    private void ScrumMasterCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScrumMasterCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ScrumMasterCheckBoxActionPerformed

    private void POCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_POCheckBoxStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_POCheckBoxStateChanged

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed

        if (validateFields()){


        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Date data;
        try {
            data = sdf.parse(birthDateTxt.getText());
        } catch (ParseException e) {
            e.printStackTrace();
            throw new RuntimeException(e.getMessage());
        }
        

        Endereco endereco = Endereco.builder().cep(zipTxt.getText()).cidade(cityTxt.getText()).logradouro(addressTxt.getText()).build();
        

        System.out.println("Data formatada" + data);
        Usuario newUser = Usuario.builder().
                endereco(endereco)
                .cpf(ssnTxt.getText())
                .dataNasc(data)
                .nome(nameTxt.getText())
                .tarefasDesignadas(new ArrayList<>())
                .boards(new ArrayList<>())
                .build();
        
        GerenciadorInterGrafica.getMyInstance().criarUsuario(newUser);
        
        setDefaultColorToPanels();
        dispose();
        }else{
            JOptionPane.showMessageDialog(this, this.msgError, "Client Registered", JOptionPane.ERROR_MESSAGE);
            this.msgError = "";
            System.out.println("An error occurred in the user creation.");
        }
    }//GEN-LAST:event_OKButtonActionPerformed
    private Boolean validateFields(){
        setDefaultColorToPanels();
        
        if (!birthDateTxt.getText().isEmpty()) {
            try {
                parseLocalDate(birthDateTxt.getText());
            } catch (Exception e) {
                this.msgError = this.msgError + "Invalid birth date. Try again.\n";
                bDateLabel.setForeground(Color.red);
                System.out.println("An error occurred: "+e.getMessage());
            }
        }
        if (!Utils.isCPF(ssnTxt.getText())) {
            this.msgError = this.msgError + "Invalid ssn number. Try again.\n";
            ssnLabel.setForeground(Color.red);
        }
        if (nameTxt.getText().isEmpty()) {
            this.msgError = this.msgError + "Invalid name. Try again.\n";
            NameLabel.setForeground(Color.red);
        }
        
        if (cityTxt.getText().isEmpty()) {
            this.msgError = this.msgError + "Invalid city name. Try again.\n";
            cityLabel.setForeground(Color.red);
        }
        if (addressTxt.getText().isEmpty()) {
            this.msgError = this.msgError + "Invalid address. Try again.\n";
            addressLabel.setForeground(Color.red);
        }

        
        if(this.msgError.isEmpty()){
 
            return true;
        }else{
            //JOptionPane.showMessageDialog(this, this.msgError, "Client Registered", JOptionPane.INFORMATION_MESSAGE);
            
            return false;
        }
    }
    private void setDefaultColorToPanels(){
        addressLabel.setForeground(Color.black);
        bDateLabel.setForeground(Color.black);
        cityLabel.setForeground(Color.black);
        ssnLabel.setForeground(Color.black);
        NameLabel.setForeground(Color.black);
        zipLabel.setForeground(Color.black);
    }
    private String invalidateZipField(String msgParam){
        zipLabel.setForeground(Color.red);
        zipTxt.setText("");
        return msgParam + "Invalid zip number. Try again.\n";
    }
    
    private LocalDate parseLocalDate(String dateStr){
        return LocalDate.parse(dateStr, FORMATTER);
    }
    
    
    private void cityTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityTxtActionPerformed

    private void ssnTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ssnTxtFocusLost

    }//GEN-LAST:event_ssnTxtFocusLost

    private void zipTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_zipTxtFocusLost
        this.msgError = "";
        System.out.println("ZIP TXT: " + zipTxt.getText());
        
        if (!(Utils.searchAddress(zipTxt.getText()) == null)) {
            //SE O CAMPO CEP NAÃO FOR NULO CAI AQUI
            System.out.println("CEP: "+Utils.searchAddress(zipTxt.getText()));
            if (!(Utils.searchAddress(zipTxt.getText()).getUf() != null)) {
                //SE O CEP NÃO FOR NULO MAS NÃO FOR VÁLIDO CAI AQUI
                this.msgError = invalidateZipField(this.msgError);
                addressTxt.setText("");
                cityTxt.setText("");
            } else {
                //SE O CEP FOR VÁLIDO CAI AQUI
                addressTxt.setText(Utils.searchAddress(zipTxt.getText()).getLogradouro());
                cityTxt.setText(Utils.searchAddress(zipTxt.getText()).getCidade());
            }
        }else{
            //  SE FOR NULO CAI AQUI
            this.msgError = invalidateZipField(this.msgError);
        }
        
    }//GEN-LAST:event_zipTxtFocusLost

    private void picturePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_picturePanelMouseClicked
        JFileChooser fileChoser = new JFileChooser();
        
        // Configuração da JANELA
        fileChoser.setMultiSelectionEnabled(false);
        fileChoser.setFileFilter(  new FileNameExtensionFilter("Imagens", "png", "gif", "jpg", "jpeg" )  );
        fileChoser.setAcceptAllFileFilterUsed(false);
        
        // Abrir no último diretório aberto. Na primeira vez é NULL
        fileChoser.setCurrentDirectory(file);
               
        if ( fileChoser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION ) {
            file = fileChoser.getSelectedFile();
            
            // Imagem
            Icon foto = new ImageIcon( file.getPath() );           
            Utils.mostrarFoto(picturePanel,foto);
        }
    }//GEN-LAST:event_picturePanelMouseClicked

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox DeveloperCheckBox;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JButton OKButton;
    private javax.swing.JCheckBox POCheckBox;
    private javax.swing.JCheckBox ScrumMasterCheckBox;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField addressTxt;
    private javax.swing.JLabel bDateLabel;
    private javax.swing.JFormattedTextField birthDateTxt;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JTextField cityTxt;
    private javax.swing.JRadioButton femaleRadio;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton maleRadio;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JLabel picturePanel;
    private javax.swing.JComboBox<String> porpuseComboBox;
    private javax.swing.JLabel porpuseLabel;
    private javax.swing.JPanel positionPanel;
    private javax.swing.JPanel sexPanel;
    private javax.swing.ButtonGroup sex_group;
    private javax.swing.JLabel ssnLabel;
    private javax.swing.JFormattedTextField ssnTxt;
    private javax.swing.JLabel zipLabel;
    private javax.swing.JFormattedTextField zipTxt;
    // End of variables declaration//GEN-END:variables
}
